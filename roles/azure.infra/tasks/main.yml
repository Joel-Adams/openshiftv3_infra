---
#---------------------------------------------------
#  Azure Infra Creation
#---------------------------------------------------

#- name: Create json deploymentParameters
#  template: src=templates/master_count.j2 dest=/var/tmp/master_parameters

#- name: define master instance count
#  set fact:
#    MASTER_LOCAL_CONFIG: |
#      value: "{{ master_vm_size }}

- name: Create Azure Deploy
  azure_rm_deployment:
   state: present
   subscription_id: "{{ azure_subscription_id }}"
   client_id: "{{ azure_client_id }}"
   secret: "{{ azure_client_secret }}"
   tenant: "{{ azure_tenant_id }}"
   resource_group_name: "{{ resource_group_name }}"
   template_link: https://raw.githubusercontent.com/Joel-Adams/openshift-container-platform/workshopv3/azuredeploy.json
   parameters:
     masterVmSize:
       value: "{{ master_vm_size }}"
     infraVmSize:
       value: "{{ infra_vm_size }}"
     nodeVmSize:
       value: "{{ node_vm_size }}"
     cnsVmSize:
       value: "{{ cns_vm_size }}"
     osImageType:
       value: "sourceImageURI"
     sourceImageURI:
       value: "{{ azure_image_id }}"
     storageKind:
       value: "managed"
     openshiftClusterPrefix:
       value: "{{ openshift_cluster_prefix }}"
     masterInstanceCount:
       value: "{{ number_master_nodes | regex_replace('([0-9]+)','\\1') }}"
     infraInstanceCount:
       value: "{{ number_infra_nodes }}"
     nodeInstanceCount:
       value: "{{ number_nodes }}"
     dataDiskSize:
       value: "{{ data_disk_size }}"
     adminUsername:
       value: "{{ openshift_admin_username }}"
     openshiftPassword:
       value: "{{ openshift_password }}"
     enableMetrics:
       value: "true"
     enableLogging:
       value: "true"
     enableCNS:
       value: "true"
     rhsmUsernameOrOrgId:
       value: "{{ username }}"
     rhsmPasswordOrActivationKey:
       value: "{{ password }}"
     rhsmPoolId:
       value: "{{ pool_id }}"
     rhsmBrokerPoolId:
       value: "{{ pool_id }}"
     sshPublicKey:
       value: "{{ ssh_public_key }}"
     keyVaultResourceGroup:
       value: "{{ key_vault_resource_group }}"
     keyVaultName:
       value: "{{ key_vault_name }}"
     keyVaultSecret:
       value: "{{ key_vault_secret }}"
     enableAzure:
       value: "false"
     masterClusterDnsType:
       value: "default"
     masterClusterDns:
       value: "{{ master_cluster_dns }}"
     routingSubDomainType:
       value: "{{ routing_sub_domain_type }}"
     routingSubDomain:
       value: "{{ routing_sub_domain }}"
     virtualNetworkNewOrExisting:
       value: "new"
     virtualNetworkResourceGroupName:
       value: "{{ virtual_network_resource_group }}"
     virtualNetworkName:
       value: "{{ virtual_network_name }}"
     addressPrefixes:
       value: "{{ address_prefixes }}"
     masterSubnetName:
       value: "{{ master_subnet_name }}"
     masterSubnetPrefix:
       value: "{{ master_subnet_prefix }}"
     infraSubnetName:
       value: "{{ infra_subnet_name }}"
     infraSubnetPrefix:
       value: "{{ infra_subnet_prefix }}"
     nodeSubnetName:
       value: "{{ node_subnet_name }}"
     nodeSubnetPrefix:
       value: "{{ node_subnet_prefix }}"
     existingMasterSubnetReference:
       value: "/subscriptions/abc686f6-963b-4e64-bff4-99dc369ab1cd/resourceGroups/vnetresourcegroup/providers/Microsoft.Network/virtualNetworks/openshiftvnet/subnets/mastersubnet"
     existingInfraSubnetReference:
       value: "/subscriptions/abc686f6-963b-4e64-bff4-99dc369ab1cd/resourceGroups/vnetresourcegroup/providers/Microsoft.Network/virtualNetworks/openshiftvnet/subnets/infrasubnet"
     existingCnsSubnetReference:
       value: "/subscriptions/abc686f6-963b-4e64-bff4-99dc369ab1cd/resourceGroups/vnetresourcegroup/providers/Microsoft.Network/virtualNetworks/openshiftvnet/subnets/cnssubnet"
     existingNodeSubnetReference:
       value: "/subscriptions/abc686f6-963b-4e64-bff4-99dc369ab1cd/resourceGroups/vnetresourcegroup/providers/Microsoft.Network/virtualNetworks/openshiftvnet/subnets/nodesubnet"
     masterClusterType:
       value: "public"
     masterPrivateClusterIp:
       value: "{{ master_private_cluster_ip }}"
     routerClusterType:
       value: "public"
     routerPrivateClusterIp:
       value: "{{ router_private_cluster_ip }}"
     routingCertType:
       value: "selfsigned"
     masterCertType:
       value: "selfsigned"
     proxySettings:
       value: "none"
     httpProxyEntry:
       value: "none"
     httpsProxyEntry:
       value: "none"
     noProxyEntry:
       value: "none"
